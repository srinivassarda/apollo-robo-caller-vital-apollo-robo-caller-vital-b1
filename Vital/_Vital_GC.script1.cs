using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Threading;
using System.Text.RegularExpressions;

namespace Dynamic.Script_8D5C0B44DFF2F0F
{
	// Script generated by Pega Robotics Studio 8.0.1093.0
	// Please use caution when modifying class name, namespace or attributes
	[OpenSpan.TypeManagement.DynamicTypeAttribute()]
	[OpenSpan.Design.ComponentIdentityAttribute("Script-8D5C0B44DFF2F0F")]
	public sealed class Script
	{
		public void SetValue(OpenSpan.Adapters.Web.Controls.TextBox textBox, String text)
		{
			int x = textBox.ScreenRectangle.Location.X + textBox.ScreenRectangle.Width/2;
			int y = textBox.ScreenRectangle.Location.Y + textBox.ScreenRectangle.Height/2;
			
			performLeftClick((uint) x, (uint) y);
			SendKeys.SendWait(text);
		}
		public bool GetAge(String DOB)
		{
			string expression= @"\(([^)]+)\)";
			Regex regex = new Regex(expression);
			Match match = regex.Match(DOB);
			int age = Int32.Parse(match.Groups[1].Value);
			if(age>18)
				return true;
			return false;
		}
		
		public void PerformClick(OpenSpan.Adapters.Web.Controls.WebControl control)
		{
			int x = control.ScreenRectangle.Location.X + control.ScreenRectangle.Width/2;
			int y = control.ScreenRectangle.Location.Y + control.ScreenRectangle.Height/2;
			OpenSpan.Diagnostics.Diagnostic.TraceVerbose("XPostion",""+x);
			OpenSpan.Diagnostics.Diagnostic.TraceVerbose("YPostion",""+y);
			performLeftClick((uint) x, (uint) y);
		}
		
		[DllImport("user32.dll", CharSet = CharSet.Unicode)]
		static extern bool SetCursorPos(uint x, uint y);
 
		[DllImport("user32.dll", CharSet = CharSet.Unicode, CallingConvention = CallingConvention.StdCall)]
		public static extern void mouse_event(uint dwFlags, uint dx, uint dy, uint cButtons, UIntPtr dwExtraInfo);

		private const uint MOUSEEVENTF_MOVE      = 0x0001;
		private const uint MOUSEEVENTF_LEFTDOWN  = 0x0002;
		private const uint MOUSEEVENTF_LEFTUP    = 0x0004;
		private const uint MOUSEEVENTF_RIGHTDOWN = 0x0008;
		private const uint MOUSEEVENTF_RIGHTUP   = 0x0010;
		private const uint MOUSEEVENTF_ABSOLUTE  = 0x8000;

		private static void performLeftClick(uint x, uint y)
		{
			SetCursorPos(x, y);
			mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, UIntPtr.Zero);
			//Thread.Sleep(50);
			mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, UIntPtr.Zero);
		}

		private static void performRightClick(uint x, uint y)
		{
			SetCursorPos(x, y);
			mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, UIntPtr.Zero);
			//Thread.Sleep(50);
			mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, UIntPtr.Zero);
		}
		

	}
}
